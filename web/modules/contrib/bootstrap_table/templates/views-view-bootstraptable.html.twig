{#
/**
 * @file
 * Default theme implementation for displaying a view as a table.
 *
 * Available variables:
 * - attributes: Remaining HTML attributes for the element.
 *   - class: HTML classes that can be used to style contextually through CSS.
 * - title : The title of this group of rows.
 * - header: The table header columns.
 *   - attributes: Remaining HTML attributes for the element.
 *   - content: HTML classes to apply to each header cell, indexed by
 *   the header's key.
 *   - default_classes: A flag indicating whether default classes should be
 *     used.
 * - caption_needed: Is the caption tag needed.
 * - caption: The caption for this table.
 * - accessibility_description: Extended description for the table details.
 * - accessibility_summary: Summary for the table details.
 * - rows: Table row items. Rows are keyed by row number.
 *   - attributes: HTML classes to apply to each row.
 *   - columns: Row column items. Columns are keyed by column number.
 *     - attributes: HTML classes to apply to each column.
 *     - content: The column content.
 *   - default_classes: A flag indicating whether default classes should be
 *     used.
 * - responsive: A flag indicating whether table is responsive.
 * - sticky: A flag indicating whether table header is sticky.
 *
 * @see template_preprocess_views_view_table()
 *
 * @ingroup themeable
 */
#}
{% include 'views-view-table.html.twig' %}
{% if sumFooter is not null %}
  <script>
    function {{ sumFooter['sum-title-field'] }}() {
      return "{{ sumFooter['sum-title'] }}";
    }
    {% for field in sumFooter['sum-field'] %}
    function {{ field }}Formatter(data) {
      var field = this.field
      return data.map(function (row) {
        let div = document.createElement("div");
        div.innerHTML = row[field];
        return +div.innerText.replace(/[^\d\.]*/g, '')
      }).reduce(function (sum, i) {
        return sum + i
      }, 0)
    }
    {% endfor %}
  </script>
{% endif %}
